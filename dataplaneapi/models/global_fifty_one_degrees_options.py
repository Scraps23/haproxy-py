# coding: utf-8

"""
    HAProxy Data Plane API

    API for editing and managing haproxy instances. Provides process information, configuration management, haproxy stats and logs.   # noqa: E501

    OpenAPI spec version: 2.7
    Contact: support@haproxy.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class GlobalFiftyOneDegreesOptions(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'cache_size': 'int',
        'data_file': 'str',
        'property_name_list': 'str',
        'property_separator': 'str'
    }

    attribute_map = {
        'cache_size': 'cache_size',
        'data_file': 'data_file',
        'property_name_list': 'property_name_list',
        'property_separator': 'property_separator'
    }

    def __init__(self, cache_size=None, data_file=None, property_name_list=None, property_separator=None):  # noqa: E501
        """GlobalFiftyOneDegreesOptions - a model defined in Swagger"""  # noqa: E501
        self._cache_size = None
        self._data_file = None
        self._property_name_list = None
        self._property_separator = None
        self.discriminator = None
        if cache_size is not None:
            self.cache_size = cache_size
        if data_file is not None:
            self.data_file = data_file
        if property_name_list is not None:
            self.property_name_list = property_name_list
        if property_separator is not None:
            self.property_separator = property_separator

    @property
    def cache_size(self):
        """Gets the cache_size of this GlobalFiftyOneDegreesOptions.  # noqa: E501


        :return: The cache_size of this GlobalFiftyOneDegreesOptions.  # noqa: E501
        :rtype: int
        """
        return self._cache_size

    @cache_size.setter
    def cache_size(self, cache_size):
        """Sets the cache_size of this GlobalFiftyOneDegreesOptions.


        :param cache_size: The cache_size of this GlobalFiftyOneDegreesOptions.  # noqa: E501
        :type: int
        """

        self._cache_size = cache_size

    @property
    def data_file(self):
        """Gets the data_file of this GlobalFiftyOneDegreesOptions.  # noqa: E501


        :return: The data_file of this GlobalFiftyOneDegreesOptions.  # noqa: E501
        :rtype: str
        """
        return self._data_file

    @data_file.setter
    def data_file(self, data_file):
        """Sets the data_file of this GlobalFiftyOneDegreesOptions.


        :param data_file: The data_file of this GlobalFiftyOneDegreesOptions.  # noqa: E501
        :type: str
        """

        self._data_file = data_file

    @property
    def property_name_list(self):
        """Gets the property_name_list of this GlobalFiftyOneDegreesOptions.  # noqa: E501


        :return: The property_name_list of this GlobalFiftyOneDegreesOptions.  # noqa: E501
        :rtype: str
        """
        return self._property_name_list

    @property_name_list.setter
    def property_name_list(self, property_name_list):
        """Sets the property_name_list of this GlobalFiftyOneDegreesOptions.


        :param property_name_list: The property_name_list of this GlobalFiftyOneDegreesOptions.  # noqa: E501
        :type: str
        """

        self._property_name_list = property_name_list

    @property
    def property_separator(self):
        """Gets the property_separator of this GlobalFiftyOneDegreesOptions.  # noqa: E501


        :return: The property_separator of this GlobalFiftyOneDegreesOptions.  # noqa: E501
        :rtype: str
        """
        return self._property_separator

    @property_separator.setter
    def property_separator(self, property_separator):
        """Sets the property_separator of this GlobalFiftyOneDegreesOptions.


        :param property_separator: The property_separator of this GlobalFiftyOneDegreesOptions.  # noqa: E501
        :type: str
        """

        self._property_separator = property_separator

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(GlobalFiftyOneDegreesOptions, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, GlobalFiftyOneDegreesOptions):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
